builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello bash
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
echo hello bach > stdout.txt
echo hello bash > stdout.txt
echo hello bash >> stdout.txt
echo hello bash > stdout.txt
> stdout.txt
bad_command
bad_command > stdout.txt
bad_command > stderr.txt
bad_command 2> stderr.txt
echo hello bash > stdout.txt
read NAME
echo NAME
echo
echo NAME
echo stdin
echo $NAME
echo $NAME > stdout.txt
echo freeCodeCamp > name.txt
read NAME < name.txt
echo $NAME
echo Pari
echo $NAME
cat $NAME
cat
cat name.txt
cat < name.txt
echo Pari
cat
cat
Pari
echo Bo
< name.txt
echo < name.txt
echo $ < name.txt
touch script.sh
chmod +x script.sh
./script.sh
echo Pari
echo Pari
echo Pari
./script.sh < name.txt
./script.sh < name.txt 2> stderr.txt
./script.sh < name.txt 2> stderr.txt > stdout.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_2.txt
wc kitty_ipsum_1.txt
wc --help
wc
man wc
wc kitty_ipsum_1.txt
wc -l kitty_ipsum_1.txt
wc -w kitty_ipsum_1.txt
wc -m kitty_ipsum_1.txt
wc kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
pari hello
pari hello
wc < kitty_ipsum_1.txt
echo '~~ kitty_ipsum_1.txt info ~~' > kitty_info.txt
echo -e '\nNumber of lines:' >> kitty_info.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
echo -e '\nNumber of words:' >> kitty_info.txt
cat kitty_ipsum_1.txt
echo -e '\nNumber of characters:' >> kitty_info.txt
wc -m < kitty_ipsum_1.txt >> kitty_info.txt
grep 'meow' kitty_ipsum_1.txt
man grep
grep --color 'meow' kitty_ipsum_1.txt
grep --color -n 'meow' kitty_ipsum_1.txt
grep --color -n 'meow[a-z]*' kitty_ipsum_1.txt
echo -e '\nNumber of times meow or meowzer appears:' >> kitty_info.txt
grep --color -c 'meow[a-z]*' kitty_ipsum_1.txt
grep --color 'meow[a-z]*' kitty_ipsum_1.txt
grep --color -c 'meow[a-z]*' kitty_ipsum_1.txt
grep -c 'meow[a-z]*' kitty_ipsum_1.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
grep -c 'meow[a-z]*' kitty_ipsum_1.txt
man grep
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
echo -e '\nLines that they appear on:' >> kitty_info.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
man grep
cat name.txt
sed 's/r/2' name.txt
sed 's/r/2/' name.txt
sed 's/free/f233/' name.txt
sed 's/freecodecamp/f233C0d3C@mp/' name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' name.txt >> name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' name.txt > name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' < name.txt
cat name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' < name.txt
echo freecodecamp >> name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' < name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' < name.txt
cat name.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
man sed
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
sed -n 's/^\d+://p' kitty_ipsum_1.txt
grep --color 'cat[a-z]*' kitty_ipsum_1.txt
echo -e '\nNumber of times cat, cats, or catnip appears:'
echo -e '\nNumber of times cat, cats, or catnip appears:' >> kitty_info.txt
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
echo -e '\nLines that they appear on:'
echo -e '\nLines that they appear on:' >> kitty_info.txt
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
echo -e '\n~~ kitty_ipsum_2.txt info ~~' >> kitty_info.txt
echo -e '\n\n~~ kitty_ipsum_2.txt info ~~' >> kitty_info.txt
echo -e '\nNumber of lines:' >> kitty_info.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
cat kitty_ipsum_2.txt
cat kitty_ipsum_2.txt
echo -e '\nNumber of words:' >> kitty_info.txt
cat kitty_ipsum_2.txt
cat kitty_ipsum_2.txt -w < wc >> kitty_info.txt
cat kitty_ipsum_2.txt
cat kitty_ipsum_2.txt -w > wc >> kitty_info.txt
cat kitty_ipsum_2.txt -w < wc >> kitty_info.txt
kitty_ipsum_2.txt -w < wc >> kitty_info.txt
wc -w kitty_ipsum_2.txt < cat >> kitty_info.txt
cat kitty_ipsum_2.txt
wc -w < kitty_ipsum_2.txt >> kitty_info.txt
echo -e '\nNumber of characters:' >> kitty_info.txt
cat kitty_ipsum_2.txt
wc -m < kitty_ipsum_2.txt
cat kitty_ipsum_2.txt
cat kitty_ipsum_2.txt
wc -m < kitty_ipsum_2.txt
grep 'meow' kitty_ipsum_2.txt
grep 'meow[a-z]*' kitty_ipsum_2.txt
grep --color 'meow[a-z]*' kitty_ipsum_2.txt
echo -e'\nNumber of times meow or meowzer appears:' >> kitty_info.txt
echo -e '\nNumber of times meow or meowzer appears:' >> kitty_info.txt
grep -o 'meow[a-z]*' kitty_ipsum_2.txt
grep -o 'meow[a-z]*' kitty_ipsum_2.txt
echo -e '\nLines that they appear on:' >> kitty_info.txt
grep -n 'meow[a-z]*' kitty_ipsum_2.txt
grep --color 'cat[a-z]*' kitty_ipsum_2.txt
echo -e '\nNumber of times cat, cats, or catnip appears:' >> kitty_info.txt
grep -o 'cat[a-z]*' kitty_ipsum_2.txt
echo -e '\nLines that they appear on:' >> kitty_info.txt
grep -o 'cat[a-z]*' kitty_ipsum_2.txt
grep -n 'cat[a-z]*' kitty_ipsum_2.txt
touch translate.sh
chmode +x translate.sh
chmod +x translate.sh
./translate kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate < kitty_ipsum_1.txt
./translate.sh < kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
./translate.ah kitty_ipsum_1.txt
./translate.ah kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
grep --color 'dogchow[a-z]*'
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.ah kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_2.txt
./translate.sh kitty_ipsum_1.txt >> doggy_ipsum_1.txt
cat doggy_ipsum_1.txt
diff kitty_ipsum_1.txt doggy_ipsum_1.txt
man diff
diff --color kitty_ipsum_1.txt doggy_ipsum_1.txt
./translate.sh kitty_ipsum_2.txt >> doggy_ipsum_2.txt
